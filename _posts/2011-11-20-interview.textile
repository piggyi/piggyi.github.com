---
layout: post
title: 面试这码事
category: sitelog
---

h3. 面试这码事

10月回到学校就开始忙着找工作的事，秉持着不为富贵所淫的原则，一开始先就着知名公司来，不为别的，钱多活少，不用为五斗米折腰，大锅饭还好混，爹妈说出去倍儿有面子，我们都喜欢它，好吧，这么想挺无耻的，考虑到还是要有点积极向上的干劲，也跑到v2ex之类的社区看看有没有什么有意思的小团队，于是乎一共是面试了两大两小共四个团队，下面说说面试过程中的故事。

先说某度，暑假创业去之前，面了某度的flash部门，走了他们的内推渠道所以没笔试，不过面试还是逃不掉，老规矩三面，一面语言细节，二面架构和算法，三面是HR或是经理的非技术面。

一面考了些AS3语言的细节，字符串处理、数组操作、正则表达式、JS/AS互相调用之类的问题，这块东西，平时做过点小玩意，多研究下语言细节，基本没什么问题，常用的一些函数、技巧要记住，不常用的查文档就好。

接下来二面考架构和算法，架构这个话题不大好谈，一般公司会问一些常用的设计模式，MVC、Singleton之类的，还要问些常用的敏捷框架，如果是Java那就是Struts、Spring、Hibernate之类，PHP比较常见的框架诸如Zend、CI、Yii、Cake，考察AS这种不太主流的语言，可以做答案的备选就比较少了，我说我用Robotlegs做过点小东西，面试官就开始让我剖析一下这个框架的基本原理，比如DI（依赖注入）怎么实现的啊、Service起什么作用，这些理论知识算是内功，然后又问一些具体问题，比如流媒体音频播放器的实现，简述下自己的设计方案，面试官会针对你的设计缺陷提出一些需求诸如可随意换肤等等，再要求面试者做相应的设计调整，总体来说平时多设计几个东西，即便自己设计的架构算不上多么优雅，但也有些心得体会，面试官不会太过为难一个还没毕业的学生，对于我们这种新手来说学习架构的另一个途径就是学学别人的设计，Github上大把的开源框架，clone下来自己摸索设计者的架构思路，研究得多了会有很多心得。架构说完就会说到算法，这个算是程序员的硬功了，就像作家的遣词造句和歌手的嗓音一样，属于幼功，要早下功夫。算法面试的题目跟面试的职位有那么一点关系，比如你是做UI编程（Flash、Obj-C&Cocoa、Android、游戏），算法的考察面就会在图形图像运动物理学上多考一点；而服务端编程（LAMP、J2EE、ASP.NET）会对大数据处理以及数据库相关的问题有一定侧重，不过除了这些专有职位的特定算法之外，基础的算法和数据结构是对所有程序员都有要求的，至于基础算法和数据结构是什么，参见《算法导论》吧，虽然它那么厚，但它真的就是个导论......扯远了，某度问了我一个floodfill算法，问了一些1/2生男生女之类人民群众喜闻乐见的智力题，这类题目上网搜索可以找到很多，此处不赘述。二面聊了将近一个小时，在这里要提一下，技术面的过程中，面试者要尽量多和面试官聊会，可以通过一些问题的回答主动透露出自己对于哪些方面有研究，让面试官尽量了解你的所知所学，比如他跟你聊项目开发你可以跟他说你平时用svn、git管理源码，他跟你说字符串处理你可以跟他说正则表达式，这样面试官就会对你说的这些方面比较感兴趣，问你几个问题，进而也增进对面试者的了解。

三面非技术面，在大部分公司是HR或是CTO又或是入职后的直接上司担任面试官，这个过程属于仁者见仁智者见智的环节，视公司情况定问题，如果是创业公司，就希望你能多承担一些工作量，同时又天赋异禀，能够self-motivated；如果是成熟公司，希望你拥有较好的团队协作能力，也就是传说中的被领导力，有点领导能力那就更好了，毕竟在这些动辄成千上万员工的公司管理成本很高，招一个天天惹事的伙计来，经理就不用干别的了。另外HR还会和面试者谈薪酬待遇的问题，关于这个问题要提前做做功课，在网上查查这一行的平均水准，当然要以公司所在地为准，实在找不到数据就看看同行的其他规模类似的公司的招聘条件，总之这事不能漫天要价，也不能很没骨气的自砍一刀，反正HR还要和你砍价的，提个平均水准，调整调整也就差不多了。

某度面试通过后，后来因为创业去了，暂时推掉实习，回来之后人家公司的flash部门人满，最终放弃。回到学校联系了TX和HE两家公司，接下来说说它们。

TX是个高大全公司，几乎什么互联网产品都做，面试这家公司的经历挺好玩的，因为错过了学校的公开招聘，索性抱着试一试的态度给他们的团队博客上留下的邮箱发了封邮件，结果邮件发出去不到10分钟就接到了个陌生电话，当然就是他们的面试官啦，之所以觉得好玩是因为这效率也太高了，要知道面某度可是熬了足足一个月才经历完三次面试加一次HR录用通知......TX的面试和某度差不多，不过把前两面压缩到一块去了，一通电话解决了所有技术面的问题，不过只问到一个算法题，其他全部是语言细节，AS事件机制、HTML的object各项参数含义、Loader和URLLoader的区别，	问的那道算法问题是：现有一堆不连续的IP段（即含有首地址和尾地址表示的一段IP），从客户端的某个IP发来请求，求这个IP的具体位置，解决方案是二叉查找，先把那堆IP段用首地址（或尾地址）排个序，然后利用IP的可对比性查找。

TX的面试因为光是技术面还不够，还需要去北京进行HR面和经理面，暂时搁置。

HE是家成立两年的social game创业公司，刚拿了B轮风投，产品也不错，因为公司包路费住宿费要求赴北京面试，干脆去北京跑了一圈，顺便跟几个在北京或实习或工作的朋友聚聚，到北京的第二天带我和同行的哥们参观了下公司办公环境，感觉还不错，扁平化管理，环境宽松，属于典型的互联网公司的年轻氛围。面试的过程是轮番轰炸- -! 两位经理外加一位CTO以平均5分钟的时间间隔顺序面了我俩小时，面试的题目主要集中在算法数据结构上，题目都是些实际的问题，比如GFW的实现（囧），敏感词的过滤算法（更囧），这些和谐的问题可问倒我了，平时就顾着翻翻墙外加吐槽这些玩意，没考虑过实现这些牛逼的东西该怎么做，这个故事告诉我们凡事要以辩证的思维考虑，这些东西固然和谐，但是要做出来还真是挺有难度的，方校长你牛逼......

最后一家公司是之前在学校合作过项目的一家北京做数据挖掘的公司，这里以BFD代称，由于BFD的CTO到成都办事，跟学校的一个哥们见了面，顺便说到我和迪哥到了北京，为了尽一下地主之谊，BFD的CEO约我俩喝个茶聊聊天，顺便满足一下我们的好奇心，请我们去BFD参观了一下，所以严格来说主要是聊天去了，请了一位项目经理和一位技术主管和我聊，基本上在侃大山，聊聊IT行业聊聊学校团队的近况，这里充分发挥了我打屁聊天的功力，跟两位行业前辈侃了一个来小时，了解了一下行业的情况，毕竟我们还是挂着蛋壳的菜鸟，多听听过来人的经历总没错的。

回到学校，仔细回想了下面试的几次经历，有惭愧有收获，惭愧的是被问到基础知识发现自己掌握的很不牢靠，收获的是看到了很多优秀的同行的牛逼之处，发现自己有很大的空间可以提升，做个程序员对于很多人来说不仅仅是个糊口饭吃的饭碗，还是一种很大的乐趣与成就，接下来准备补补基础，趁还没毕业过几天大学生的上进日子，虽说大四吧，也不能真的如传言般天天跟过年似的。




